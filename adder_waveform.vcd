$date
	Fri Oct 10 23:32:02 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module tb_adder $end
$var wire 1 ! carry_out $end
$var wire 32 " adder_out [31:0] $end
$var reg 32 # adder_in0 [31:0] $end
$var reg 32 $ adder_in1 [31:0] $end
$var reg 1 % carry_in $end
$scope module uut $end
$var wire 32 & adder_in0 [31:0] $end
$var wire 32 ' adder_in1 [31:0] $end
$var wire 1 % carry_in $end
$var wire 1 ! carry_out $end
$var wire 1 ( c7 $end
$var wire 1 ) c6 $end
$var wire 1 * c5 $end
$var wire 32 + adder_out [31:0] $end
$scope module block6 $end
$var wire 8 , adder_in0 [7:0] $end
$var wire 8 - adder_in1 [7:0] $end
$var wire 1 % carry_in $end
$var wire 1 * carry_out $end
$var wire 1 . c4 $end
$var wire 8 / adder_out [7:0] $end
$scope module block4 $end
$var wire 4 0 adder_in0 [3:0] $end
$var wire 4 1 adder_in1 [3:0] $end
$var wire 1 % carry_in $end
$var wire 1 . carry_out $end
$var wire 1 2 c3 $end
$var wire 1 3 c2 $end
$var wire 1 4 c1 $end
$var wire 4 5 adder_out [3:0] $end
$scope module block0 $end
$var wire 1 6 adder_in0 $end
$var wire 1 7 adder_in1 $end
$var wire 1 8 adder_out $end
$var wire 1 % carry_in $end
$var wire 1 4 carry_out $end
$upscope $end
$scope module block1 $end
$var wire 1 9 adder_in0 $end
$var wire 1 : adder_in1 $end
$var wire 1 ; adder_out $end
$var wire 1 4 carry_in $end
$var wire 1 3 carry_out $end
$upscope $end
$scope module block2 $end
$var wire 1 < adder_in0 $end
$var wire 1 = adder_in1 $end
$var wire 1 > adder_out $end
$var wire 1 3 carry_in $end
$var wire 1 2 carry_out $end
$upscope $end
$scope module block3 $end
$var wire 1 ? adder_in0 $end
$var wire 1 @ adder_in1 $end
$var wire 1 A adder_out $end
$var wire 1 2 carry_in $end
$var wire 1 . carry_out $end
$upscope $end
$upscope $end
$scope module block5 $end
$var wire 4 B adder_in0 [3:0] $end
$var wire 4 C adder_in1 [3:0] $end
$var wire 1 . carry_in $end
$var wire 1 * carry_out $end
$var wire 1 D c3 $end
$var wire 1 E c2 $end
$var wire 1 F c1 $end
$var wire 4 G adder_out [3:0] $end
$scope module block0 $end
$var wire 1 H adder_in0 $end
$var wire 1 I adder_in1 $end
$var wire 1 J adder_out $end
$var wire 1 . carry_in $end
$var wire 1 F carry_out $end
$upscope $end
$scope module block1 $end
$var wire 1 K adder_in0 $end
$var wire 1 L adder_in1 $end
$var wire 1 M adder_out $end
$var wire 1 F carry_in $end
$var wire 1 E carry_out $end
$upscope $end
$scope module block2 $end
$var wire 1 N adder_in0 $end
$var wire 1 O adder_in1 $end
$var wire 1 P adder_out $end
$var wire 1 E carry_in $end
$var wire 1 D carry_out $end
$upscope $end
$scope module block3 $end
$var wire 1 Q adder_in0 $end
$var wire 1 R adder_in1 $end
$var wire 1 S adder_out $end
$var wire 1 D carry_in $end
$var wire 1 * carry_out $end
$upscope $end
$upscope $end
$upscope $end
$scope module block7 $end
$var wire 8 T adder_in0 [7:0] $end
$var wire 8 U adder_in1 [7:0] $end
$var wire 1 * carry_in $end
$var wire 1 ) carry_out $end
$var wire 1 V c4 $end
$var wire 8 W adder_out [7:0] $end
$scope module block4 $end
$var wire 4 X adder_in0 [3:0] $end
$var wire 4 Y adder_in1 [3:0] $end
$var wire 1 * carry_in $end
$var wire 1 V carry_out $end
$var wire 1 Z c3 $end
$var wire 1 [ c2 $end
$var wire 1 \ c1 $end
$var wire 4 ] adder_out [3:0] $end
$scope module block0 $end
$var wire 1 ^ adder_in0 $end
$var wire 1 _ adder_in1 $end
$var wire 1 ` adder_out $end
$var wire 1 * carry_in $end
$var wire 1 \ carry_out $end
$upscope $end
$scope module block1 $end
$var wire 1 a adder_in0 $end
$var wire 1 b adder_in1 $end
$var wire 1 c adder_out $end
$var wire 1 \ carry_in $end
$var wire 1 [ carry_out $end
$upscope $end
$scope module block2 $end
$var wire 1 d adder_in0 $end
$var wire 1 e adder_in1 $end
$var wire 1 f adder_out $end
$var wire 1 [ carry_in $end
$var wire 1 Z carry_out $end
$upscope $end
$scope module block3 $end
$var wire 1 g adder_in0 $end
$var wire 1 h adder_in1 $end
$var wire 1 i adder_out $end
$var wire 1 Z carry_in $end
$var wire 1 V carry_out $end
$upscope $end
$upscope $end
$scope module block5 $end
$var wire 4 j adder_in0 [3:0] $end
$var wire 4 k adder_in1 [3:0] $end
$var wire 1 V carry_in $end
$var wire 1 ) carry_out $end
$var wire 1 l c3 $end
$var wire 1 m c2 $end
$var wire 1 n c1 $end
$var wire 4 o adder_out [3:0] $end
$scope module block0 $end
$var wire 1 p adder_in0 $end
$var wire 1 q adder_in1 $end
$var wire 1 r adder_out $end
$var wire 1 V carry_in $end
$var wire 1 n carry_out $end
$upscope $end
$scope module block1 $end
$var wire 1 s adder_in0 $end
$var wire 1 t adder_in1 $end
$var wire 1 u adder_out $end
$var wire 1 n carry_in $end
$var wire 1 m carry_out $end
$upscope $end
$scope module block2 $end
$var wire 1 v adder_in0 $end
$var wire 1 w adder_in1 $end
$var wire 1 x adder_out $end
$var wire 1 m carry_in $end
$var wire 1 l carry_out $end
$upscope $end
$scope module block3 $end
$var wire 1 y adder_in0 $end
$var wire 1 z adder_in1 $end
$var wire 1 { adder_out $end
$var wire 1 l carry_in $end
$var wire 1 ) carry_out $end
$upscope $end
$upscope $end
$upscope $end
$scope module block8 $end
$var wire 8 | adder_in0 [7:0] $end
$var wire 8 } adder_in1 [7:0] $end
$var wire 1 ) carry_in $end
$var wire 1 ( carry_out $end
$var wire 1 ~ c4 $end
$var wire 8 !" adder_out [7:0] $end
$scope module block4 $end
$var wire 4 "" adder_in0 [3:0] $end
$var wire 4 #" adder_in1 [3:0] $end
$var wire 1 ) carry_in $end
$var wire 1 ~ carry_out $end
$var wire 1 $" c3 $end
$var wire 1 %" c2 $end
$var wire 1 &" c1 $end
$var wire 4 '" adder_out [3:0] $end
$scope module block0 $end
$var wire 1 (" adder_in0 $end
$var wire 1 )" adder_in1 $end
$var wire 1 *" adder_out $end
$var wire 1 ) carry_in $end
$var wire 1 &" carry_out $end
$upscope $end
$scope module block1 $end
$var wire 1 +" adder_in0 $end
$var wire 1 ," adder_in1 $end
$var wire 1 -" adder_out $end
$var wire 1 &" carry_in $end
$var wire 1 %" carry_out $end
$upscope $end
$scope module block2 $end
$var wire 1 ." adder_in0 $end
$var wire 1 /" adder_in1 $end
$var wire 1 0" adder_out $end
$var wire 1 %" carry_in $end
$var wire 1 $" carry_out $end
$upscope $end
$scope module block3 $end
$var wire 1 1" adder_in0 $end
$var wire 1 2" adder_in1 $end
$var wire 1 3" adder_out $end
$var wire 1 $" carry_in $end
$var wire 1 ~ carry_out $end
$upscope $end
$upscope $end
$scope module block5 $end
$var wire 4 4" adder_in0 [3:0] $end
$var wire 4 5" adder_in1 [3:0] $end
$var wire 1 ~ carry_in $end
$var wire 1 ( carry_out $end
$var wire 1 6" c3 $end
$var wire 1 7" c2 $end
$var wire 1 8" c1 $end
$var wire 4 9" adder_out [3:0] $end
$scope module block0 $end
$var wire 1 :" adder_in0 $end
$var wire 1 ;" adder_in1 $end
$var wire 1 <" adder_out $end
$var wire 1 ~ carry_in $end
$var wire 1 8" carry_out $end
$upscope $end
$scope module block1 $end
$var wire 1 =" adder_in0 $end
$var wire 1 >" adder_in1 $end
$var wire 1 ?" adder_out $end
$var wire 1 8" carry_in $end
$var wire 1 7" carry_out $end
$upscope $end
$scope module block2 $end
$var wire 1 @" adder_in0 $end
$var wire 1 A" adder_in1 $end
$var wire 1 B" adder_out $end
$var wire 1 7" carry_in $end
$var wire 1 6" carry_out $end
$upscope $end
$scope module block3 $end
$var wire 1 C" adder_in0 $end
$var wire 1 D" adder_in1 $end
$var wire 1 E" adder_out $end
$var wire 1 6" carry_in $end
$var wire 1 ( carry_out $end
$upscope $end
$upscope $end
$upscope $end
$scope module block9 $end
$var wire 8 F" adder_in0 [7:0] $end
$var wire 8 G" adder_in1 [7:0] $end
$var wire 1 ( carry_in $end
$var wire 1 ! carry_out $end
$var wire 1 H" c4 $end
$var wire 8 I" adder_out [7:0] $end
$scope module block4 $end
$var wire 4 J" adder_in0 [3:0] $end
$var wire 4 K" adder_in1 [3:0] $end
$var wire 1 ( carry_in $end
$var wire 1 H" carry_out $end
$var wire 1 L" c3 $end
$var wire 1 M" c2 $end
$var wire 1 N" c1 $end
$var wire 4 O" adder_out [3:0] $end
$scope module block0 $end
$var wire 1 P" adder_in0 $end
$var wire 1 Q" adder_in1 $end
$var wire 1 R" adder_out $end
$var wire 1 ( carry_in $end
$var wire 1 N" carry_out $end
$upscope $end
$scope module block1 $end
$var wire 1 S" adder_in0 $end
$var wire 1 T" adder_in1 $end
$var wire 1 U" adder_out $end
$var wire 1 N" carry_in $end
$var wire 1 M" carry_out $end
$upscope $end
$scope module block2 $end
$var wire 1 V" adder_in0 $end
$var wire 1 W" adder_in1 $end
$var wire 1 X" adder_out $end
$var wire 1 M" carry_in $end
$var wire 1 L" carry_out $end
$upscope $end
$scope module block3 $end
$var wire 1 Y" adder_in0 $end
$var wire 1 Z" adder_in1 $end
$var wire 1 [" adder_out $end
$var wire 1 L" carry_in $end
$var wire 1 H" carry_out $end
$upscope $end
$upscope $end
$scope module block5 $end
$var wire 4 \" adder_in0 [3:0] $end
$var wire 4 ]" adder_in1 [3:0] $end
$var wire 1 H" carry_in $end
$var wire 1 ! carry_out $end
$var wire 1 ^" c3 $end
$var wire 1 _" c2 $end
$var wire 1 `" c1 $end
$var wire 4 a" adder_out [3:0] $end
$scope module block0 $end
$var wire 1 b" adder_in0 $end
$var wire 1 c" adder_in1 $end
$var wire 1 d" adder_out $end
$var wire 1 H" carry_in $end
$var wire 1 `" carry_out $end
$upscope $end
$scope module block1 $end
$var wire 1 e" adder_in0 $end
$var wire 1 f" adder_in1 $end
$var wire 1 g" adder_out $end
$var wire 1 `" carry_in $end
$var wire 1 _" carry_out $end
$upscope $end
$scope module block2 $end
$var wire 1 h" adder_in0 $end
$var wire 1 i" adder_in1 $end
$var wire 1 j" adder_out $end
$var wire 1 _" carry_in $end
$var wire 1 ^" carry_out $end
$upscope $end
$scope module block3 $end
$var wire 1 k" adder_in0 $end
$var wire 1 l" adder_in1 $end
$var wire 1 m" adder_out $end
$var wire 1 ^" carry_in $end
$var wire 1 ! carry_out $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
1m"
0l"
1k"
1j"
0i"
1h"
1g"
0f"
1e"
1d"
0c"
1b"
b1111 a"
0`"
0_"
0^"
b0 ]"
b1111 \"
1["
0Z"
1Y"
1X"
0W"
1V"
1U"
0T"
1S"
1R"
0Q"
1P"
b1111 O"
0N"
0M"
0L"
b0 K"
b1111 J"
b11111111 I"
0H"
b0 G"
b11111111 F"
1E"
0D"
1C"
1B"
0A"
1@"
1?"
0>"
1="
1<"
0;"
1:"
b1111 9"
08"
07"
06"
b0 5"
b1111 4"
13"
02"
11"
10"
0/"
1."
1-"
0,"
1+"
1*"
0)"
1("
b1111 '"
0&"
0%"
0$"
b0 #"
b1111 ""
b11111111 !"
0~
b0 }
b11111111 |
1{
0z
1y
1x
0w
1v
1u
0t
1s
1r
0q
1p
b1111 o
0n
0m
0l
b0 k
b1111 j
1i
0h
1g
1f
0e
1d
1c
0b
1a
1`
0_
1^
b1111 ]
0\
0[
0Z
b0 Y
b1111 X
b11111111 W
0V
b0 U
b11111111 T
1S
0R
1Q
1P
0O
1N
1M
0L
1K
1J
0I
1H
b1111 G
0F
0E
0D
b0 C
b1111 B
1A
0@
1?
1>
0=
1<
1;
0:
19
18
07
16
b1111 5
04
03
02
b0 1
b1111 0
b11111111 /
0.
b0 -
b11111111 ,
b11111111111111111111111111111111 +
0*
0)
0(
b0 '
b11111111111111111111111111111111 &
0%
b0 $
b11111111111111111111111111111111 #
b11111111111111111111111111111111 "
0!
$end
#10000
1!
0m"
1^"
0j"
1_"
0g"
1`"
b0 a"
0d"
1H"
0["
1L"
0X"
1M"
0U"
1N"
b0 I"
b0 O"
0R"
1(
0E"
16"
0B"
17"
0?"
18"
b0 9"
0<"
1~
03"
1$"
00"
1%"
0-"
1&"
b0 !"
b0 '"
0*"
1)
0{
1l
0x
1m
0u
1n
b0 o
0r
1V
0i
1Z
0f
1[
0c
1\
b0 W
b0 ]
0`
1*
0S
1D
0P
1E
0M
1F
b0 G
0J
1.
0A
12
0>
13
0;
14
b0 "
b0 +
b0 /
b0 5
08
17
b1 1
b1 -
b1 $
b1 '
#20000
1:
1=
1@
1I
1L
1O
1R
1_
1b
1e
1h
1q
1t
1w
1z
1)"
1,"
1/"
12"
1;"
1>"
1A"
1D"
1Q"
1T"
1W"
1Z"
1c"
1f"
1i"
1l"
06
09
0<
0?
0H
0K
0N
0Q
0^
0a
0d
0g
0p
0s
0v
0y
0("
0+"
0."
01"
0:"
0="
0@"
0C"
0P"
0S"
0V"
0Y"
0b"
0e"
0h"
0k"
b1111 1
b1111 C
b1111 Y
b1111 k
b1111 #"
b1111 5"
b1111 K"
b1111 ]"
b0 0
b0 B
b0 X
b0 j
b0 ""
b0 4"
b0 J"
b0 \"
b0 "
b0 +
b0 /
b0 5
08
b11111111 -
b11111111 U
b11111111 }
b11111111 G"
b0 ,
b0 T
b0 |
b0 F"
1%
b11111111111111111111111111111111 $
b11111111111111111111111111111111 '
b0 #
b0 &
#30000
02
0A
0.
0J
0F
0M
0E
0P
0D
b0 G
0S
0*
0`
0\
0c
0[
0f
0Z
b0 ]
0i
0V
0r
0n
0u
0m
0x
0l
b0 W
b0 o
0{
0)
0*"
0&"
0-"
0%"
00"
0$"
b0 '"
03"
0~
0<"
08"
0?"
07"
0B"
06"
b0 !"
b0 9"
0E"
0(
0R"
0N"
0U"
0M"
0X"
0L"
b0 O"
0["
0H"
0d"
0`"
0g"
0_"
0j"
0^"
b0 I"
b0 a"
0m"
0!
03
0;
07
0:
0=
0@
0I
0L
0O
0R
0_
0b
0e
0h
0q
0t
0w
0z
0)"
0,"
0/"
02"
0;"
0>"
0A"
0D"
0Q"
0T"
0W"
0Z"
0c"
0f"
0i"
0l"
04
b0 1
b0 C
b0 Y
b0 k
b0 #"
b0 5"
b0 K"
b0 ]"
b0 "
b0 +
b0 /
b0 5
08
b0 -
b0 U
b0 }
b0 G"
0%
b0 $
b0 '
#40000
1>
1A
1J
1M
1P
b1111 G
1S
1`
1c
1f
b1111 ]
1i
1r
1u
1x
b11111111 W
b1111 o
1{
1*"
1-"
10"
b1111 '"
13"
1<"
1?"
1B"
b11111111 !"
b1111 9"
1E"
1R"
1U"
1X"
b1111 O"
1["
1d"
1g"
1j"
b11111111 I"
b1111 a"
1m"
1;
13
12
1.
1F
1E
1D
1*
1\
1[
1Z
1V
1n
1m
1l
1)
1&"
1%"
1$"
1~
18"
17"
16"
1(
1N"
1M"
1L"
1H"
1`"
1_"
1^"
14
17
1:
1=
1@
1I
1L
1O
1R
1_
1b
1e
1h
1q
1t
1w
1z
1)"
1,"
1/"
12"
1;"
1>"
1A"
1D"
1Q"
1T"
1W"
1Z"
1c"
1f"
1i"
16
19
1<
1?
1H
1K
1N
1Q
1^
1a
1d
1g
1p
1s
1v
1y
1("
1+"
1."
11"
1:"
1="
1@"
1C"
1P"
1S"
1V"
1Y"
1b"
1e"
1h"
b1111 1
b1111 C
b1111 Y
b1111 k
b1111 #"
b1111 5"
b1111 K"
b111 ]"
b1111 0
b1111 B
b1111 X
b1111 j
b1111 ""
b1111 4"
b1111 J"
b111 \"
b11111111111111111111111111111111 "
b11111111111111111111111111111111 +
b11111111 /
b1111 5
18
b11111111 -
b11111111 U
b11111111 }
b1111111 G"
b11111111 ,
b11111111 T
b11111111 |
b1111111 F"
1%
b1111111111111111111111111111111 $
b1111111111111111111111111111111 '
b1111111111111111111111111111111 #
b1111111111111111111111111111111 &
#50000
0;
0>
b1 5
0A
0J
0M
0P
b1 /
b0 G
0S
0`
0c
0f
b0 ]
0i
0r
0u
0x
b0 W
b0 o
0{
0*"
0-"
00"
b0 '"
03"
0<"
0?"
0B"
b0 !"
b0 9"
0E"
0R"
0U"
0X"
b0 O"
0["
0d"
0g"
0j"
b1 "
b1 +
b0 I"
b0 a"
0m"
04
03
02
0.
0F
0E
0D
0*
0\
0[
0Z
0V
0n
0m
0l
0)
0&"
0%"
0$"
0~
08"
07"
06"
0(
0N"
0M"
0L"
0H"
0`"
0_"
0^"
1!
07
0:
0=
0@
0I
0L
0O
0R
0_
0b
0e
0h
0q
0t
0w
0z
0)"
0,"
0/"
02"
0;"
0>"
0A"
0D"
0Q"
0T"
0W"
0Z"
0c"
0f"
0i"
1l"
06
09
0<
0?
0H
0K
0N
0Q
0^
0a
0d
0g
0p
0s
0v
0y
0("
0+"
0."
01"
0:"
0="
0@"
0C"
0P"
0S"
0V"
0Y"
0b"
0e"
0h"
1k"
b0 1
b0 C
b0 Y
b0 k
b0 #"
b0 5"
b0 K"
b1000 ]"
b0 0
b0 B
b0 X
b0 j
b0 ""
b0 4"
b0 J"
b1000 \"
b0 -
b0 U
b0 }
b10000000 G"
b0 ,
b0 T
b0 |
b10000000 F"
b10000000000000000000000000000000 $
b10000000000000000000000000000000 '
b10000000000000000000000000000000 #
b10000000000000000000000000000000 &
#60000
